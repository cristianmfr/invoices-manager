/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, '__esModule', { value: true })

const {
	PrismaClientKnownRequestError,
	PrismaClientUnknownRequestError,
	PrismaClientRustPanicError,
	PrismaClientInitializationError,
	PrismaClientValidationError,
	getPrismaClient,
	sqltag,
	empty,
	join,
	raw,
	skip,
	Decimal,
	Debug,
	objectEnumValues,
	makeStrictEnum,
	Extensions,
	warnOnce,
	defineDmmfProperty,
	Public,
	getRuntime,
	createParam,
} = require('./runtime/edge.js')

const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.9.0
 * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
 */
Prisma.prismaVersion = {
	client: '6.9.0',
	engine: '81e4af48011447c3cc503a190e86995b66d2a28e',
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
 * Extensions
 */
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
	DbNull: objectEnumValues.classes.DbNull,
	JsonNull: objectEnumValues.classes.JsonNull,
	AnyNull: objectEnumValues.classes.AnyNull,
}

/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
	Serializable: 'Serializable',
})

exports.Prisma.UserScalarFieldEnum = {
	id: 'id',
	email: 'email',
	name: 'name',
	password: 'password',
	createdAt: 'createdAt',
	updatedAt: 'updatedAt',
}

exports.Prisma.EmailsLogScalarFieldEnum = {
	id: 'id',
	email: 'email',
	status: 'status',
	error: 'error',
	message: 'message',
	data: 'data',
	createdAt: 'createdAt',
	updatedAt: 'updatedAt',
}

exports.Prisma.MessagesLogScalarFieldEnum = {
	id: 'id',
	status: 'status',
	error: 'error',
	message: 'message',
	data: 'data',
	createdAt: 'createdAt',
	updatedAt: 'updatedAt',
}

exports.Prisma.SortOrder = {
	asc: 'asc',
	desc: 'desc',
}

exports.Prisma.NullsOrder = {
	first: 'first',
	last: 'last',
}
exports.SendStatus = exports.$Enums.SendStatus = {
	sent: 'sent',
	failed: 'failed',
}

exports.Prisma.ModelName = {
	User: 'User',
	EmailsLog: 'EmailsLog',
	MessagesLog: 'MessagesLog',
}
/**
 * Create the Client
 */
const config = {
	generator: {
		name: 'client',
		provider: {
			fromEnvVar: null,
			value: 'prisma-client-js',
		},
		output: {
			value:
				'/Users/cristianmfr/www/stiloweb/apps/saraserra-invoices-manager/apps/api/src/app/shared/prisma/generated',
			fromEnvVar: null,
		},
		config: {
			engineType: 'library',
		},
		binaryTargets: [
			{
				fromEnvVar: null,
				value: 'darwin-arm64',
				native: true,
			},
		],
		previewFeatures: [],
		sourceFilePath:
			'/Users/cristianmfr/www/stiloweb/apps/saraserra-invoices-manager/apps/api/prisma/schema.prisma',
		isCustomOutput: true,
	},
	relativeEnvPaths: {
		rootEnvPath: null,
		schemaEnvPath: '../../../../../.env',
	},
	relativePath: '../../../../../prisma',
	clientVersion: '6.9.0',
	engineVersion: '81e4af48011447c3cc503a190e86995b66d2a28e',
	datasourceNames: ['db'],
	activeProvider: 'sqlite',
	postinstall: false,
	inlineDatasources: {
		db: {
			url: {
				fromEnvVar: null,
				value: 'file:./dev.db',
			},
		},
	},
	inlineSchema:
		'generator client {\n  provider = "prisma-client-js"\n  output   = "../src/app/shared/prisma/generated"\n}\n\ndatasource db {\n  provider = "sqlite"\n  url      = "file:./dev.db"\n}\n\nmodel User {\n  id String @id @default(uuid())\n\n  email    String  @unique @map("email")\n  name     String? @map("name")\n  password String  @map("password")\n\n  createdAt DateTime @default(now()) @map("created_at")\n  updatedAt DateTime @updatedAt @map("updated_at")\n\n  @@map("users")\n}\n\nenum SendStatus {\n  sent\n  failed\n\n  @@map("email_status")\n}\n\nmodel EmailsLog {\n  id String @id @default(uuid())\n\n  email   String     @map("email")\n  status  SendStatus @map("status")\n  error   String?    @map("error")\n  message String?    @map("message")\n  data    String?    @map("data")\n\n  createdAt DateTime @default(now()) @map("created_at")\n  updatedAt DateTime @updatedAt @map("updated_at")\n\n  @@map("emails_log")\n}\n\nmodel MessagesLog {\n  id String @id @default(uuid())\n\n  status  SendStatus @map("status")\n  error   String?    @map("error")\n  message String?    @map("message")\n  data    String?    @map("data")\n\n  createdAt DateTime @default(now()) @map("created_at")\n  updatedAt DateTime @updatedAt @map("updated_at")\n\n  @@map("messages_log")\n}\n',
	inlineSchemaHash:
		'ae4867aff51fc6a8bb332e27f2dd234f55a017520fcfb0fdd5127bccbf17c53f',
	copyEngine: true,
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse(
	'{"models":{"User":{"dbName":"users","schema":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"String","nativeType":null,"default":{"name":"uuid","args":[4]},"isGenerated":false,"isUpdatedAt":false},{"name":"email","dbName":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"name","dbName":"name","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"password","dbName":"password","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","dbName":"created_at","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":null,"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","dbName":"updated_at","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":null,"isGenerated":false,"isUpdatedAt":true}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"EmailsLog":{"dbName":"emails_log","schema":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"String","nativeType":null,"default":{"name":"uuid","args":[4]},"isGenerated":false,"isUpdatedAt":false},{"name":"email","dbName":"email","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"status","dbName":"status","kind":"enum","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"SendStatus","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"error","dbName":"error","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"message","dbName":"message","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"data","dbName":"data","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","dbName":"created_at","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":null,"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","dbName":"updated_at","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":null,"isGenerated":false,"isUpdatedAt":true}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"MessagesLog":{"dbName":"messages_log","schema":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":true,"type":"String","nativeType":null,"default":{"name":"uuid","args":[4]},"isGenerated":false,"isUpdatedAt":false},{"name":"status","dbName":"status","kind":"enum","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"SendStatus","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"error","dbName":"error","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"message","dbName":"message","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"data","dbName":"data","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","nativeType":null,"isGenerated":false,"isUpdatedAt":false},{"name":"createdAt","dbName":"created_at","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"DateTime","nativeType":null,"default":{"name":"now","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"updatedAt","dbName":"updated_at","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"DateTime","nativeType":null,"isGenerated":false,"isUpdatedAt":true}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}},"enums":{"SendStatus":{"values":[{"name":"sent","dbName":null},{"name":"failed","dbName":null}],"dbName":"email_status"}},"types":{}}',
)
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
	parsed: {},
})

if (
	(typeof globalThis !== 'undefined' && globalThis['DEBUG']) ||
	(typeof process !== 'undefined' && process.env && process.env.DEBUG) ||
	undefined
) {
	Debug.enable(
		(typeof globalThis !== 'undefined' && globalThis['DEBUG']) ||
			(typeof process !== 'undefined' && process.env && process.env.DEBUG) ||
			undefined,
	)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)
